   Many threads packages have been proposed for program-
ming wireless sensor platforms. However, many sensor net-
work operating systems still choose to provide an event-
driven model, due to efficiency concerns. We present TOS-
Threads, a threads package for TinyOS that combines the
ease of a threaded programming model with the efficiency
of an event-based kernel. TOSThreads is backwards com-
patible with existing TinyOS code, supports an evolvable,
thread-safe kernel API, and enables flexible application de-
velopment through dynamic linking and loading. In TOS-
Threads, TinyOS code runs at a higher priority than appli-
cation threads and all kernel operations are invoked only
via message passing, never directly, ensuring thread-safety
while enabling maximal concurrency. The TOSThreads
package is non-invasive; it does not require any large-scale
changes to existing TinyOS code.
   We demonstrate that TOSThreads context switches and
system calls introduce an overhead of less than 0.92% and
that dynamic linking and loading takes as little as 90 ms
for a representative sensing application. We compare differ-
ent programming models built using TOSThreads, including
standard C with blocking system calls and a reimplementa-
tion of Tenet. Additionally, we demonstrate that TOSThr-
eads is able to run computationally intensive tasks without
adversely affecting the timing of critical OS services.

