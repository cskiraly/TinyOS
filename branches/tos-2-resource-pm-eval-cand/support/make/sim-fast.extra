#-*-Makefile-*- vim:syntax=make
#$Id: sim-fast.extra,v 1.1.2.1 2006-03-12 00:19:18 scipio Exp $

GCC=gcc
GPP=g++
OPTFLAGS = -g -O3
LIBS = -lm -lstdc++ 
PFLAGS += -tossim -fnesc-nido-tosnodes=1000 -fnesc-simulate -fnesc-nido-motenumber=sim_node\(\) -DTOSSIM_NO_DEBUG
WFLAGS = -Wno-nesc-data-race

BUILDDIR   = simbuild/$(PLATFORM)
CFILE    = $(BUILDDIR)/sim.c
OBJFILE    = $(BUILDDIR)/sim.o
CXXFILE    = $(TOSDIR)/lib/tossim/tossim.c
CXXOBJFILE = $(BUILDDIR)/tossim.o
PYFILE     = $(TOSDIR)/lib/tossim/tossim_wrap.cxx
PYOBJFILE  = $(BUILDDIR)/pytossim.o
PYDIR      =/usr/include/python2.3
SIMDIR     =$(TOSDIR)/lib/tossim
XML        = app.xml
DUMPTYPES = -fnesc-dump=components -fnesc-dump=variables -fnesc-dump=constants -fnesc-dump=typedefs -fnesc-dump=interfacedefs -fnesc-dump=tags
BUILD_DEPS = sim-exe

# lib/tossim has to come at the end in order to ensure basic TOSSIM
# implementations are the last resort, so put it directly in the call

sim-exe: builddir $(BUILD_EXTRA_DEPS) FORCE
	@echo "  placing object files in $(BUILDDIR)"
	@echo "  writing XML schema to $(XML)"
	@echo "  compiling $(COMPONENT) to object file sim.o"
	$(NCC) -c -fPIC -o $(OBJFILE) $(OPTFLAGS) $(PFLAGS) $(CFLAGS) $(WFLAGS) $(COMPONENT).nc $(LDFLAGS)  $(DUMPTYPES) -fnesc-dumpfile=$(XML)

	@echo "  compiling Python support into pytossim.o and tossim.o"
	$(GPP) -c -shared -fPIC -o $(PYOBJFILE) $(OPTFLAGS) $(CFLAGS) $(PYFILE) -I$(PYDIR) -I$(SIMDIR) -DHAVE_CONFIG_H 
	$(GPP) -c -shared -fPIC -o $(CXXOBJFILE) $(OPTFLAGS) $(CFLAGS) $(CXXFILE) -I$(PYDIR) -I$(SIMDIR)
	@echo "  linking into shared object ./_TOSSIMmodule.so"
	$(GPP) -shared $(PYOBJFILE) $(OBJFILE) $(CXXOBJFILE) -lstdc++ -o _TOSSIMmodule.so
	@echo "  copying Python script interface TOSSIM.py from lib/tossim to local directory"
	@cp $(TOSDIR)/lib/tossim/TOSSIM.py .
	@echo " "
	@echo "*** Successfully built $(PLATFORM) TOSSIM library. "

