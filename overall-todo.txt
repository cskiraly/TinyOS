nesC: 
- David Gay's todo list
- everyone: use, report problems, improvement requests (minor only, please)

tools:
- select, patch, build, package tools (Kristin)
  Java, cygwin, avr+msp gcc+gdb+binutils+libc, graphviz, avarice
  support using JREs rather than only JDKs
- javax.comm replacement (Cory)
- build-system (tools/make) (Cory)

packaging:
- cleanup the tinyos tools story (tinyos-1.x/tools), make into cleanly
  compilable + installable package (??)
- cleanup our jar story (aka, no more giant CLASSPATH)
  drop useless stuff, merge into single jar?
- tinyos RPMs should come with compiled .class files (see JRE requirement)
  (alternately, they could all be placed in the single jar file...)

regression testing:
- from 1.2 (Ion)

TinyOS core:
- booting (Phil L.)
- scheduler (Phil L.)
- routing
  - protocols, implementations
- SNMS (Gil)
- Deluge (Jonathan)
- OSKI (Phil L.)

Apps:
- tests
- tutorial apps (see tutorial)
- surge-like
- TOSBase

Tutorial:
- update, write apps, you name it

mica/mica2/mica2dot/micaz:
- booting (Martin)
- adc (Martin)
- timer (Martin)
- storage (David G.)
- serial id
- built-in sensors

storage:
- at45db (David G.)
- stm25p (Jonathan)

csma radio:
- mica
- cc1000 (Joe, David G.???)
- cc2420 (Joe)

security:
- mica, tinysec
- cc1000, tinysec
- cc2420

buses:
- i2c
- spi
- bus sharing/allocation (Joe, Vlado?)

msp430:
- booting
- adc
- timer

telos a/b:
- booting
- serial id (Gil)
- built-in sensors

eyes:
- booting
- serial id

intel mote 2:
- booting (Phil B.)
- timer
- storage (Lama)
- serial id

sensor boards:
- micasb
- basicsb
- any others?? (mts400 (weather), mda300ca (data ack), telos?, eyes?)

PC-side java:
- guis for standard apps
- net.tinyos.message (mig-support)
- net.tinyos.packet (r/w TinyOS packets)
- net.tinyos.mcenter
- net.tinyos.sf (serial forwarder)
- net.tinyos.sim (tossim)
- net.tinyos.tools (basic user tools)
- net.tinyos.util (utility classes)

PC-side other:
- XML mig / ncg-like (based on new nesC attribute stuff?)
- matlab
- C support for:
  - serial protocol (over serial ports and tcp sockets)
  - serial forwarder protocol (over tcp sockets)
  - serial forwarder
  - simple listening
  - mig / ncg
- other-language support for:
  - serial forwarder protocol (over tcp sockets)
  - mig / ncg
  - which languages? (python, perl?)
