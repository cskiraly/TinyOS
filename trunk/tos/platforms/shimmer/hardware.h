/*
 * Copyright (c) 2006, Intel Corporation
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, 
 * this list of conditions and the following disclaimer. 
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution. 
 *
 * Neither the name of the Intel Corporation nor the names of its contributors
 * may be used to endorse or promote products derived from this software 
 * without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @author Steven Ayer
 * @date June 2006
 */


#ifndef _H_hardware_h
#define _H_hardware_h

#include "msp430hardware.h"

#define SHIMMER 1

// LEDs
TOSH_ASSIGN_PIN(RED_LED,    4, 0);
TOSH_ASSIGN_PIN(ORANGE_LED, 4, 1);
TOSH_ASSIGN_PIN(YELLOW_LED, 4, 2);
TOSH_ASSIGN_PIN(GREEN_LED,  4, 3);

// CC2420 RADIO #defines
TOSH_ASSIGN_PIN(RADIO_FIFO,      1, 0);
TOSH_ASSIGN_PIN(RADIO_TIMED_SFD, 1, 2);
TOSH_ASSIGN_PIN(RADIO_FIFOP,     2, 6);
TOSH_ASSIGN_PIN(RADIO_CCA,       2, 7);

TOSH_ASSIGN_PIN(RADIO_1V8_EN,    4, 7);
TOSH_ASSIGN_PIN(RADIO_VREF,      5, 6);    // unused in shimmer
TOSH_ASSIGN_PIN(SW_BT_PWR_N,     5, 6);    //   "    "    "
TOSH_ASSIGN_PIN(SW_SD_PWR_N,     5, 6);    //   "    "    "

TOSH_ASSIGN_PIN(RADIO_SFD,       5, 0);
TOSH_ASSIGN_PIN(RADIO_SIMO1,     5, 1);
TOSH_ASSIGN_PIN(RADIO_SOMI1,     5, 2);
TOSH_ASSIGN_PIN(RADIO_CSN,       5, 4);
TOSH_ASSIGN_PIN(CSN,       5, 4);
TOSH_ASSIGN_PIN(RADIO_RESET,     5, 7);


// Don't think these are needed
TOSH_ASSIGN_PIN(CC_FIFOP, 2, 6);
TOSH_ASSIGN_PIN(CC_FIFO, 1, 0);
TOSH_ASSIGN_PIN(CC_SFD, 1, 2);
TOSH_ASSIGN_PIN(CC_VREN, 5, 6);
TOSH_ASSIGN_PIN(CC_RSTN, 5, 7);

// BT pins
TOSH_ASSIGN_PIN(BT_PIO,          1, 5);
TOSH_ASSIGN_PIN(BT_RTS,          1, 6);
TOSH_ASSIGN_PIN(BT_CTS,          1, 7);
TOSH_ASSIGN_PIN(BT_TXD,          3, 6);
TOSH_ASSIGN_PIN(BT_RXD,          3, 7);
TOSH_ASSIGN_PIN(BT_RESET,        5, 5);

//BSL Pins
TOSH_ASSIGN_PIN(PROG_OUT,  1, 1);
TOSH_ASSIGN_PIN(PROG_IN,   2, 2);

// SD uart chip-select
TOSH_ASSIGN_PIN(SD_CS_N, 3, 0);

// ADC
TOSH_ASSIGN_PIN(ADC0, 6, 5);
TOSH_ASSIGN_PIN(ADC1, 6, 4);
TOSH_ASSIGN_PIN(ADC2, 6, 3);

// ADC lines on the testpoints
TOSH_ASSIGN_PIN(ADC_0, 6, 0);
TOSH_ASSIGN_PIN(ADC_1, 6, 1);
TOSH_ASSIGN_PIN(ADC_2, 6, 2);
TOSH_ASSIGN_PIN(ADC_6, 6, 6);
TOSH_ASSIGN_PIN(ADC_7, 6, 7);

TOSH_ASSIGN_PIN(ADC_ACCELZ, 6, 3);
TOSH_ASSIGN_PIN(ADC_ACCELY,  6, 4);
TOSH_ASSIGN_PIN(ADC_ACCELX, 6, 5);

TOSH_ASSIGN_PIN(DAC0_AN, 6, 6);
TOSH_ASSIGN_PIN(DAC1_AN, 6, 7);


// UART pins
// SPI1 attached to bt, cc2420
TOSH_ASSIGN_PIN(UCLK1, 5, 3);
TOSH_ASSIGN_PIN(SOMI1, 5, 2);
TOSH_ASSIGN_PIN(SIMO1, 5, 1);

// used as GPIOs
TOSH_ASSIGN_PIN(UCLK0, 3, 3);
TOSH_ASSIGN_PIN(SOMI0, 3, 2);
TOSH_ASSIGN_PIN(SIMO0, 3, 1);

// connected to UART (0 and 1)
TOSH_ASSIGN_PIN(UTXD0, 3, 4);
TOSH_ASSIGN_PIN(URXD0, 3, 5);
TOSH_ASSIGN_PIN(UTXD1, 3, 6);
TOSH_ASSIGN_PIN(URXD1, 3, 7);

// GIO pins
TOSH_ASSIGN_PIN(SER0_RTS, 1, 3);
TOSH_ASSIGN_PIN(SER0_CTS, 1, 4);

TOSH_ASSIGN_PIN(ROSC, 2, 5);

TOSH_ASSIGN_PIN(GIO0, 2, 0);
TOSH_ASSIGN_PIN(GIO1, 2, 1);


// 1-Wire
TOSH_ASSIGN_PIN(ONEWIRE_PWR,  2, 3);
TOSH_ASSIGN_PIN(ONEWIRE, 2, 4);

// ACCEL
TOSH_ASSIGN_PIN(ACCEL_SEL0,  4, 4);
TOSH_ASSIGN_PIN(ACCEL_SEL1,  4, 5);
TOSH_ASSIGN_PIN(ACCEL_SLEEP_N, 4, 6);

void TOSH_SET_PIN_DIRECTIONS(void)
{
  //LEDS
  TOSH_MAKE_RED_LED_OUTPUT();
  TOSH_MAKE_YELLOW_LED_OUTPUT();
  TOSH_MAKE_ORANGE_LED_OUTPUT();
  TOSH_MAKE_GREEN_LED_OUTPUT();
  TOSH_SEL_RED_LED_IOFUNC();
  TOSH_SEL_YELLOW_LED_IOFUNC();
  TOSH_SEL_ORANGE_LED_IOFUNC();
  TOSH_SEL_GREEN_LED_IOFUNC();

  //RADIO PINS
  //CC2420 pins
  TOSH_MAKE_RADIO_CSN_OUTPUT();
  TOSH_SEL_RADIO_CSN_IOFUNC();
  TOSH_SET_RADIO_CSN_PIN();

  TOSH_MAKE_CSN_OUTPUT();
  TOSH_SEL_CSN_IOFUNC();
  TOSH_SET_CSN_PIN();

  // should be reset_n
  TOSH_MAKE_RADIO_RESET_OUTPUT();
  TOSH_SEL_RADIO_RESET_IOFUNC();
  TOSH_CLR_RADIO_RESET_PIN();

  TOSH_MAKE_RADIO_1V8_EN_OUTPUT();
  TOSH_SEL_RADIO_1V8_EN_IOFUNC();
  TOSH_CLR_RADIO_1V8_EN_PIN();

  TOSH_MAKE_RADIO_CCA_INPUT();
  TOSH_MAKE_RADIO_FIFO_INPUT();
  TOSH_MAKE_RADIO_FIFOP_INPUT();
  TOSH_MAKE_RADIO_SFD_INPUT();
  TOSH_SEL_RADIO_CCA_IOFUNC();
  TOSH_SEL_RADIO_FIFO_IOFUNC();
  TOSH_SEL_RADIO_FIFOP_IOFUNC();
  TOSH_SEL_RADIO_SFD_IOFUNC();

  TOSH_MAKE_ONEWIRE_PWR_OUTPUT();
  TOSH_SET_ONEWIRE_PWR_PIN();

  TOSH_SEL_SD_CS_N_IOFUNC();
  TOSH_MAKE_SD_CS_N_OUTPUT();
  TOSH_SET_SD_CS_N_PIN();

  // BT PINS
  TOSH_MAKE_BT_RESET_OUTPUT();  
  TOSH_SEL_BT_RESET_IOFUNC();    
  TOSH_CLR_BT_RESET_PIN();   // mitsumi module disabled by clr

  TOSH_MAKE_BT_RTS_INPUT();      
  TOSH_SEL_BT_RTS_IOFUNC();

  TOSH_MAKE_BT_PIO_INPUT();
  TOSH_SEL_BT_PIO_IOFUNC();

  TOSH_MAKE_BT_CTS_OUTPUT();
  TOSH_SEL_BT_CTS_IOFUNC();

  TOSH_MAKE_BT_TXD_OUTPUT();
  TOSH_SEL_BT_TXD_MODFUNC();

  TOSH_MAKE_BT_RXD_INPUT();
  TOSH_SEL_BT_RXD_MODFUNC();

  // BSL Prog Pins tristate em
  TOSH_MAKE_PROG_IN_OUTPUT();
  TOSH_MAKE_PROG_OUT_OUTPUT();
  TOSH_SEL_PROG_IN_IOFUNC();
  TOSH_SEL_PROG_OUT_IOFUNC();

  // USART lines, attached to a pullup
  TOSH_SEL_UCLK0_IOFUNC();
  TOSH_MAKE_UCLK0_OUTPUT();
  TOSH_SET_UCLK0_PIN();
  TOSH_SEL_UCLK1_IOFUNC();
  TOSH_MAKE_UCLK1_OUTPUT();
  TOSH_SET_UCLK1_PIN();

  TOSH_SEL_SIMO0_IOFUNC();
  TOSH_MAKE_SIMO0_OUTPUT();
  TOSH_SET_SIMO0_PIN();
  TOSH_SEL_SOMI0_IOFUNC();
  TOSH_MAKE_SOMI0_INPUT();

  TOSH_SEL_SIMO1_IOFUNC();
  TOSH_MAKE_SIMO1_OUTPUT();
  TOSH_SET_SIMO1_PIN();
  TOSH_SEL_SOMI1_IOFUNC();
  TOSH_MAKE_SOMI1_INPUT();

  // ADC lines
  TOSH_MAKE_ADC_0_OUTPUT();
  TOSH_MAKE_ADC_1_OUTPUT();
  TOSH_MAKE_ADC_2_OUTPUT();
  TOSH_MAKE_ADC_6_OUTPUT();
  TOSH_MAKE_ADC_7_OUTPUT();

  TOSH_SEL_ADC_0_IOFUNC();
  TOSH_SEL_ADC_1_IOFUNC();
  TOSH_SEL_ADC_2_IOFUNC();
  TOSH_SEL_ADC_6_IOFUNC();
  TOSH_SEL_ADC_7_IOFUNC();
  
  TOSH_MAKE_ADC_ACCELZ_INPUT();
  TOSH_MAKE_ADC_ACCELY_INPUT();
  TOSH_MAKE_ADC_ACCELX_INPUT();
  TOSH_SEL_ADC_ACCELZ_MODFUNC();
  TOSH_SEL_ADC_ACCELY_MODFUNC();
  TOSH_SEL_ADC_ACCELX_MODFUNC();
  
  TOSH_SEL_ROSC_IOFUNC();
  TOSH_MAKE_ROSC_INPUT();

  // DAC lines
  // Default is not to use DAC mode.  Please define pin usage if you want to use them
    
  // UART pins
  // These declarations are to allow the UART module to work since it's using the names.
  // The UART module will set them to the right direction when initialized

  // ftdi/gio pins.  Unused for now so we do not set directionality or function


  // 1-wire function
  TOSH_MAKE_ONEWIRE_PWR_OUTPUT();
  TOSH_SEL_ONEWIRE_PWR_IOFUNC();
  TOSH_MAKE_ONEWIRE_INPUT();
  TOSH_SEL_ONEWIRE_IOFUNC();

  // Accelerometer pin definitions
  TOSH_SEL_ACCEL_SEL0_IOFUNC();
  TOSH_SEL_ACCEL_SEL1_IOFUNC();
  TOSH_SEL_ACCEL_SLEEP_N_IOFUNC();
  
  TOSH_MAKE_ACCEL_SEL0_OUTPUT();
  TOSH_MAKE_ACCEL_SEL1_OUTPUT();
  TOSH_MAKE_ACCEL_SLEEP_N_OUTPUT();

  /*
   * unless the accel_sel0 pin is cleared, 
   * a severe quiescent power hit occurs on the msp430
   * we go from 3.7 ua to 65.1 ua when asleep!
   */
  TOSH_CLR_ACCEL_SEL0_PIN();
  TOSH_CLR_ACCEL_SEL1_PIN();
  TOSH_CLR_ACCEL_SLEEP_N_PIN();


  // idle expansion header pins
  TOSH_MAKE_SER0_CTS_OUTPUT();
  TOSH_SEL_SER0_CTS_IOFUNC();
  TOSH_MAKE_SER0_RTS_OUTPUT();
  TOSH_SEL_SER0_RTS_IOFUNC();
  TOSH_MAKE_GIO0_INPUT();
  TOSH_SEL_GIO0_IOFUNC();
  TOSH_MAKE_GIO1_OUTPUT();
  TOSH_SEL_GIO1_IOFUNC();
  TOSH_MAKE_UTXD0_OUTPUT();
  TOSH_SEL_UTXD0_IOFUNC();
  TOSH_MAKE_URXD0_OUTPUT();
  TOSH_SEL_URXD0_IOFUNC();
  TOSH_MAKE_RADIO_VREF_OUTPUT();
  TOSH_SEL_RADIO_VREF_IOFUNC();

}

#endif // _H_hardware_h

